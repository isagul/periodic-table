{"version":3,"sources":["store.js","components/element_info/ElementInfo.js","components/right_bar/RightBar.js","components/periodic_table/PeriodicTable.js","App.js","serviceWorker.js","index.js"],"names":["Store","React","createContext","initialState","elements","loading","reducer","state","action","type","payload","ElementInfo","element","className","id","Object","keys","length","hasOwnProperty","group_id","name_small","name_ing","group_name","el_order","Number","parseFloat","molar","toFixed","RightBar","props","useContext","useState","uniqueElements","setUniqueElements","hoveredIndex","setHoveredIndex","clickedIndex","setClickedIndex","clickedName","setClickedName","isClickedGroupName","setIsClickedGroupName","override","css","useEffect","extractAndDistinct","arr","groupNames","reduce","acc","uniq","Set","map","e","JSON","stringify","Array","from","parse","sizeUnit","size","color","index","key","onMouseOver","name","idx","overGroupName","onMouseLeave","leaveGroupName","onClick","clickGroupName","href","target","rel","PeriodicTable","hoveredElement","setHoveredElement","finalHoveredElement","setFinalHoveredElement","hoveredGroup","setHoveredGroup","isAnyHoveredName","setIsAnyHoveredName","isVisible","setIsVisible","clickedElement","setClickedElement","elementButton","startIndex","endIndex","slice","setShow","getHoveredElement","value","event","App","dispatch","a","async","fetch","then","response","json","resp","status","data","Boolean","window","location","hostname","match","ReactDOM","render","useReducer","Provider","children","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"oWAEaA,EAAQC,IAAMC,gBAErBC,EAAe,CACjBC,SAAU,GACVC,SAAS,GAGb,SAASC,EAAQC,EAAOC,GACpB,OAAQA,EAAOC,MACX,IAAK,eACD,OAAO,eAAIF,EAAX,CAAkBH,SAAS,YAAKI,EAAOE,WAC3C,IAAK,cACD,OAAO,eAAIH,EAAX,CAAkBF,QAASG,EAAOE,UACtC,QACE,OAAOH,G,WCmBFI,G,YAhCK,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACnB,OACI,yBAAKC,UAAU,eAAeC,GAAG,UAEzBC,OAAOC,KAAKJ,GAASK,OAAS,GAAKL,EAAQM,eAAe,YAC1D,oCACI,yBAAKL,UAAU,SACX,yBAAKA,UAAS,4BAAuBD,EAAQO,WACxCP,EAAQQ,YAEb,yBAAKP,UAAU,QACX,4BAAKD,EAAQS,UACb,8BAAOT,EAAQU,cAGvB,yBAAKT,UAAU,UACX,yBAAKA,UAAU,eACX,uBAAGA,UAAU,QAAb,sBACA,uBAAGA,UAAS,yBAAoBD,EAAQO,WAAaP,EAAQW,WAEjE,yBAAKV,UAAU,eACX,uBAAGA,UAAU,QAAb,mBACA,uBAAGA,UAAS,yBAAoBD,EAAQO,WAAaK,OAAOC,WAAWb,EAAQc,OAAOC,QAAQ,GAA9F,IAAkG,2CAI9G,uBAAGd,UAAS,oCAA+BD,EAAQO,WAAaP,EAAQU,e,kICvBxF,IA8FeM,EA9FE,SAACC,GAAW,IACjBtB,EAAUuB,qBAAW9B,GAArBO,MADgB,EAEoBwB,mBAAS,IAF7B,mBAEjBC,EAFiB,KAEDC,EAFC,OAGgBF,mBAAS,IAHzB,mBAGjBG,EAHiB,KAGHC,EAHG,OAIgBJ,mBAAS,IAJzB,mBAIjBK,EAJiB,KAIHC,EAJG,OAKcN,mBAAS,IALvB,mBAKjBO,EALiB,KAKJC,EALI,OAM4BR,oBAAS,GANrC,mBAMjBS,EANiB,KAMGC,EANH,KAQlBC,EAAWC,cAAH,KAKdC,qBAAU,WAAO,IACLxC,EAAaG,EAAbH,SACR6B,EAAkBY,EAAmBzC,MACtC,CAACG,IAGJ,IAAMsC,EAAqB,SAACC,GACxB,IAAMC,EAAaD,EAAIE,QAAO,SAACC,EAAKrC,GAAa,IACrCO,EAAyBP,EAAzBO,SAAUG,EAAeV,EAAfU,WAClB,MAAM,GAAN,mBAAW2B,GAAX,CAAgB,CAAE9B,WAAUG,kBAC7B,IACG4B,EAAO,IAAIC,IAAIJ,EAAWK,KAAI,SAAAC,GAAC,OAAIC,KAAKC,UAAUF,OACxD,OAAOG,MAAMC,KAAKP,GAAME,KAAI,SAAAC,GAAC,OAAIC,KAAKI,MAAML,OAgChD,OACI,yBAAKxC,UAAU,cACX,yBAAKA,UAAU,QACX,gDAGAN,EAAMF,SACN,kBAAC,eAAD,CACIsC,IAAKD,EACLiB,SAAU,KACVC,KAAM,GACNC,MAAO,UACPxD,QAASE,EAAMF,UAGvB,yBAAKQ,UAAU,eAEPmB,EAAeoB,KAAI,SAACxC,EAASkD,GACzB,OACI,yBAAKC,IAAKnD,EAAQO,SACdN,UAAS,0BAAqBD,EAAQO,SAA7B,YAA0D,KAAjBe,GAAuB4B,IAAU5B,EAAe,OAAS,UAAlG,YAAgI,KAAjBE,EAAsB0B,IAAU1B,GAAgB,MAAQ,UAChL4B,YAAa,kBAlDbC,EAkDsCrD,EAlDhCsD,EAkDyCJ,QAjD5C,IAAvBtB,IACAL,EAAgB+B,GAChBrC,EAAMsC,cAAcF,KAHD,IAACA,EAAMC,GAmDNE,aAAc,kBA5CbH,EA4CuCrD,QA3CrC,IAAvB4B,IACAX,EAAMwC,eAAeJ,GACrB9B,EAAgB,MAHI,IAAC8B,GA6CDK,QAAS,kBAtCFJ,EAsCqCJ,QAtC3CG,EAsCkCrD,GArClDO,WAAamB,EAAYnB,UAC9BsB,GAAsB,GACtBJ,EAAgB,IAChBR,EAAM0C,eAAeN,KAErBxB,GAAsB,GACtBZ,EAAM0C,eAAeN,GACrB1B,EAAe0B,GACf5B,EAAgB6B,GAChB/B,EAAgB+B,KAVI,IAACD,EAAMC,IAuCTtD,EAAQU,gBAK1B,uBAAGT,UAAU,SAAS2D,KAAK,2CAA2CC,OAAO,SAASC,IAAI,uBACtF,gDAEJ,uBAAG7D,UAAU,gBAAb,qBAA8C,uBAAG2D,KAAK,4CAA4CC,OAAO,SAASC,IAAI,uBAAxE,mBCqE3CC,EA9JO,WAAO,IACjBpE,EAAUuB,qBAAW9B,GAArBO,MADgB,EAEoBwB,mBAAS,IAF7B,mBAEjB6C,EAFiB,KAEDC,EAFC,OAG8B9C,mBAAS,IAHvC,mBAGjB+C,EAHiB,KAGIC,EAHJ,OAIgBhD,mBAAS,IAJzB,mBAIjBiD,EAJiB,KAIHC,EAJG,OAKwBlD,oBAAS,GALjC,mBAKjBmD,EALiB,KAKCC,EALD,OAMUpD,oBAAS,GANnB,mBAMjBqD,EANiB,KAMNC,EANM,OAOoBtD,mBAAS,IAP7B,mBAOjBuD,EAPiB,KAODC,EAPC,OAQcxD,mBAAS,IARvB,mBAQjBO,EARiB,KAQJC,EARI,OAS4BR,oBAAS,GATrC,mBASjBS,EATiB,KASGC,EATH,KAYlB+C,EAAgB,SAACC,EAAYC,GAC/B,OACInF,EAAMH,SAASa,OAAS,GACxBV,EAAMH,SAASuF,MAAMF,EAAYC,GAAUtC,KAAI,SAACxC,EAASkD,GACrD,OACQ,4BACIjD,UAAS,gBAAWD,EAAQO,SAAnB,YAA+B+D,EAAmBtE,EAAQO,WAAa6D,EAAa7D,SAAW,iBAAmB,cAAgB,kBAC3I4C,IAAKD,EACLQ,QAAS,kBAAMsB,GAAQ,EAAMhF,IAC7BoD,YAAa,kBAwBrC,SAA2BpD,IACI,IAAvB4B,GACmB,MAAf5B,EAAQE,IAA6B,MAAfF,EAAQE,KAC9B+D,EAAkBjE,GAClBmE,EAAuBnE,IA5BQiF,CAAkBjF,KAEf,OAAlBA,EAAQc,OACR,uBAAGb,UAAU,SAASW,OAAOC,WAAWb,EAAQc,OAAOC,QAAQ,IAEnE,uBAAGd,UAAU,cAAcD,EAAQQ,YACnC,uBAAGP,UAAU,YAAb,IAA0BD,EAAQW,eAO1D,SAASqE,EAAQE,EAAOlF,GACJ,OAAZA,EACAyE,EAAaS,GAEM,MAAflF,EAAQE,IAA6B,MAAfF,EAAQE,KAC9ByE,EAAkB3E,GAClByE,EAAaS,IA4EzB,OACI,yBAAKjF,UAAU,4BACX,yBAAKA,UAAU,kBACV2E,EAAc,EAAG,IAItB,yBAAK3E,UAAU,kBACX,6BACK2E,EAAc,EAAG,IAEtB,6BACKA,EAAc,EAAG,MAG1B,yBAAK3E,UAAU,kBACX,6BACK2E,EAAc,GAAI,KAEvB,kBAAC,EAAD,CAAa5E,QAASgE,IACtB,6BACKY,EAAc,GAAI,MAG3B,yBAAK3E,UAAU,kBACV2E,EAAc,GAAI,KAEvB,yBAAK3E,UAAU,yBACV2E,EAAc,GAAI,MAEvB,kBAAC,EAAD,CACIrB,cA5FoB,SAACF,IACF,IAAvBzB,IACAyC,EAAgBhB,GAChBY,EAAkBZ,EAAM,cACxBkB,GAAoB,KAyFhBd,eApFoB,SAACJ,EAAK8B,IACP,IAAvBvD,IACAyC,EAAgBH,GAChBD,EAAkBC,GAClBK,GAAoB,KAiFhBZ,eA5EkB,SAACN,GACvB3B,EAAYnB,WAAa8C,EAAK9C,SAC9BsB,GAAsB,IAEtBA,GAAsB,GACtBwC,EAAgBhB,GAChBY,EAAkBZ,EAAM,cACxBkB,GAAoB,GACpB5C,EAAe0B,OAuEXmB,GAhEJ,yBAAKvE,UAAU,cACX,yBAAKA,UAAU,iBACX,yBAAKA,UAAS,gCAA2ByE,EAAenE,WACpD,yBAAKN,UAAU,gBACX,4BACIA,UAAS,2CAAsCyE,EAAenE,UAAYmD,QAAS,kBAAMsB,GAAQ,EAAO,QAD5G,MAKJ,yBAAK/E,UAAU,cACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,QACX,wBAAIA,UAAU,QAAQyE,EAAejE,UACrC,wBAAIR,UAAU,cAAcyE,EAAehE,aAE/C,wBAAIT,UAAU,cAAcyE,EAAelE,YAC3C,yBAAKP,UAAU,UACf,wBAAIA,UAAU,SAASyE,EAAe5D,MAAM,yCAC5C,wBAAIb,UAAS,6BAAwByE,EAAenE,WAAamE,EAAe/D,kB,sIC9DjGyE,MA3Cf,WAAgB,IAAD,EACelE,qBAAW9B,GAA/BO,EADK,EACLA,MAAO0F,EADF,EACEA,SAETvD,EAAWC,cAAH,KA0Bd,OApBAC,qBAAU,WACN,EAAAsD,EAAAC,OAAA,kEAAAD,EAAA,MACME,MAAM,8DACXC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACgB,YAAhBA,EAAKC,SACPR,EAAS,CACPxF,KAAM,eACNC,QAAS8F,EAAKE,OAEhBT,EAAS,CACPxF,KAAM,cACNC,SAAS,SAXf,uCAgBD,CAACuF,IAIF,yBAAKpF,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,eAAD,CACE8B,IAAKD,EACLiB,SAAU,KACVC,KAAM,GACNC,MAAO,UACPxD,QAASE,EAAMF,YChCHsG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACL,mBNYG,SAAuBpF,GAAQ,IAAD,EACP5B,IAAMiH,WAAW5G,EAASH,GADnB,mBAG3B2F,EAAQ,CACVvF,MAJ6B,KAK7B0F,SAL6B,MAQjC,OACI,kBAACjG,EAAMmH,SAAP,CAAgBrB,MAAOA,GAClBjE,EAAMuF,YMtBf,KACI,kBAAC,EAAD,OAENC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMpB,MAAK,SAAAqB,GACjCA,EAAaC,kB","file":"static/js/main.796e4967.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Store = React.createContext();\r\n\r\nconst initialState = {\r\n    elements: [],\r\n    loading: true\r\n};\r\n\r\nfunction reducer(state, action) {\r\n    switch (action.type) {\r\n        case 'SET_ELEMENTS':\r\n            return {...state, elements: [...action.payload]};    \r\n        case 'SET_LOADING':\r\n            return {...state, loading: action.payload}                \r\n        default:\r\n          return state;\r\n      }\r\n}\r\n\r\nexport function StoreProvider(props) {\r\n    const [state, dispatch] = React.useReducer(reducer, initialState);\r\n\r\n    const value = {\r\n        state,\r\n        dispatch\r\n    }\r\n\r\n    return (\r\n        <Store.Provider value={value}>\r\n            {props.children}\r\n        </Store.Provider>\r\n    )\r\n}","import React from 'react';\r\nimport './ElementInfo.scss';\r\n\r\nconst ElementInfo = ({ element }) => {\r\n    return (\r\n        <div className=\"element-info\" id=\"elInfo\">\r\n            {\r\n                Object.keys(element).length > 0 && element.hasOwnProperty('el_order') ?\r\n                <>\r\n                    <div className=\"title\">\r\n                        <div className={`symbol color-info-${element.group_id}`}>\r\n                            {element.name_small}\r\n                        </div>\r\n                        <div className=\"name\">\r\n                            <h3>{element.name_ing}</h3>\r\n                            <span>{element.group_name}</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"detail\">\r\n                        <div className=\"detail-atom\">\r\n                            <p className=\"info\">Atom Numarası</p>\r\n                            <p className={`val color-info-${element.group_id}`}>{element.el_order}</p>\r\n                        </div>\r\n                        <div className=\"detail-atom\">\r\n                            <p className=\"info\">Atom Kütlesi</p>\r\n                            <p className={`val color-info-${element.group_id}`}>{Number.parseFloat(element.molar).toFixed(2)} <span>g/mol</span></p>\r\n                        </div>\r\n                    </div> \r\n                </> : \r\n                <p className={`val-group-name color-info-${element.group_id}`}>{element.group_name}</p>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ElementInfo;","import React, { useEffect, useContext, useState } from 'react';\r\nimport { Store } from '../../store';\r\nimport './RightBar.scss';\r\nimport { css } from '@emotion/core';\r\nimport { PacmanLoader } from 'react-spinners';\r\n\r\nconst RightBar = (props) => {\r\n    const { state } = useContext(Store);\r\n    const [uniqueElements, setUniqueElements] = useState([]);\r\n    const [hoveredIndex, setHoveredIndex] = useState(\"\");\r\n    const [clickedIndex, setClickedIndex] = useState(\"\");\r\n    const [clickedName, setClickedName] = useState({});\r\n    const [isClickedGroupName, setIsClickedGroupName] = useState(false);\r\n\r\n    const override = css`\r\n    position:absolute;\r\n    left: 46%;\r\n    `;\r\n\r\n    useEffect(() => {\r\n        const { elements } = state;\r\n        setUniqueElements(extractAndDistinct(elements));\r\n    }, [state]);\r\n\r\n\r\n    const extractAndDistinct = (arr) => {\r\n        const groupNames = arr.reduce((acc, element) => {\r\n            const { group_id, group_name } = element;\r\n            return [...acc, { group_id, group_name }]\r\n        }, [])\r\n        const uniq = new Set(groupNames.map(e => JSON.stringify(e)));\r\n        return Array.from(uniq).map(e => JSON.parse(e));\r\n    }\r\n\r\n    const mouseOverGroupName = (name, idx) => {\r\n        if (isClickedGroupName === false) {\r\n            setHoveredIndex(idx);\r\n            props.overGroupName(name);\r\n        }        \r\n    }\r\n\r\n    const mouseLeaveGroupName = (name) => {    \r\n        if (isClickedGroupName === false) {\r\n            props.leaveGroupName(name);\r\n            setHoveredIndex(\"\");\r\n        }\r\n    }\r\n\r\n    const mouseClickGroupName = (name, idx) => {\r\n        if (name.group_id === clickedName.group_id) {\r\n            setIsClickedGroupName(false);\r\n            setClickedIndex(\"\");\r\n            props.clickGroupName(name);\r\n        } else {\r\n            setIsClickedGroupName(true);\r\n            props.clickGroupName(name);\r\n            setClickedName(name);\r\n            setClickedIndex(idx);\r\n            setHoveredIndex(idx);\r\n        }                \r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"right-menu\">\r\n            <div className=\"text\">\r\n                <h3>Periyodik Tablo</h3>\r\n            </div>\r\n            {\r\n                state.loading && \r\n                <PacmanLoader\r\n                    css={override}\r\n                    sizeUnit={\"px\"}\r\n                    size={20}\r\n                    color={'#36d7b7'}\r\n                    loading={state.loading}\r\n                /> \r\n            }\r\n            <div className=\"description\">\r\n                {\r\n                    uniqueElements.map((element, index) => {\r\n                        return (\r\n                            <div key={element.group_id}\r\n                                className={`items color-bar-${element.group_id} ${hoveredIndex !== \"\" && index !== hoveredIndex ? 'blur' : 'no-blur'} ${clickedIndex !== \"\" ? index !== clickedIndex && 'set' : 'no-set'}`}\r\n                                onMouseOver={() => mouseOverGroupName(element, index)}\r\n                                onMouseLeave={() => mouseLeaveGroupName(element)}\r\n                                onClick={() => mouseClickGroupName(element, index)}\r\n                            >{element.group_name}</div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>            \r\n            <a className=\"github\" href=\"https://github.com/isagul/periodic-table\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                <div>View on GitHub</div>\r\n            </a>\r\n            <p className=\"project-info\">I was inspired by <a href=\"https://github.com/edisdev/periodic-table\" target=\"_blank\" rel=\"noopener noreferrer\">this project</a></p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RightBar;","import React, { useContext, useState } from 'react';\r\nimport { Store } from '../../store';\r\nimport './PeriodicTable.scss';\r\nimport ElementInfo from '../element_info/ElementInfo';\r\nimport RightBar from '../right_bar/RightBar';\r\n\r\nconst PeriodicTable = () => {\r\n    const { state } = useContext(Store);\r\n    const [hoveredElement, setHoveredElement] = useState({});\r\n    const [finalHoveredElement, setFinalHoveredElement] = useState({});\r\n    const [hoveredGroup, setHoveredGroup] = useState({});\r\n    const [isAnyHoveredName, setIsAnyHoveredName] = useState(false);\r\n    const [isVisible, setIsVisible] = useState(false);\r\n    const [clickedElement, setClickedElement] = useState({});\r\n    const [clickedName, setClickedName] = useState({});\r\n    const [isClickedGroupName, setIsClickedGroupName] = useState(false);\r\n\r\n\r\n    const elementButton = (startIndex, endIndex) => {\r\n        return (\r\n            state.elements.length > 0 &&\r\n            state.elements.slice(startIndex, endIndex).map((element, index) => {\r\n                return (\r\n                        <button\r\n                            className={`color-${element.group_id} ${isAnyHoveredName ? element.group_id === hoveredGroup.group_id ? 'remove-opacity' : 'add-opacity' : 'remove-opacity'}`}\r\n                            key={index}\r\n                            onClick={() => setShow(true, element)}\r\n                            onMouseOver={() => getHoveredElement(element)}>\r\n                            {\r\n                                element.molar !== null &&\r\n                                <p className=\"molar\">{Number.parseFloat(element.molar).toFixed(2)}</p>\r\n                            }\r\n                            <p className=\"group-name\">{element.name_small}</p>\r\n                            <p className=\"el-order\"> {element.el_order}</p>\r\n                        </button> \r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    function setShow(value, element){          \r\n        if (element === null) {\r\n            setIsVisible(value);\r\n        } else {\r\n            if (element.id !== 119 && element.id !== 120) {\r\n                setClickedElement(element);\r\n                setIsVisible(value);\r\n            }  \r\n        }  \r\n    }\r\n\r\n    function getHoveredElement(element) {\r\n        if (isClickedGroupName === false) {\r\n            if (element.id !== 119 && element.id !== 120) {\r\n                setHoveredElement(element);\r\n                setFinalHoveredElement(element);\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    const handleMouseOverRightBar = (name) => {\r\n        if (isClickedGroupName === false) {\r\n            setHoveredGroup(name);\r\n            setHoveredElement(name, 'group_name');\r\n            setIsAnyHoveredName(true);\r\n        }\r\n        \r\n    }\r\n\r\n    const handleMouseLeftRightBar = (name,event) => {\r\n        if (isClickedGroupName === false) {\r\n            setHoveredGroup(finalHoveredElement)\r\n            setHoveredElement(finalHoveredElement)\r\n            setIsAnyHoveredName(false);\r\n        }\r\n        \r\n    }\r\n\r\n    const handleClickedRightBar = (name) => {\r\n        if (clickedName.group_id === name.group_id) {\r\n            setIsClickedGroupName(false);\r\n        } else {\r\n            setIsClickedGroupName(true);\r\n            setHoveredGroup(name);\r\n            setHoveredElement(name, 'group_name');\r\n            setIsAnyHoveredName(true);\r\n            setClickedName(name);\r\n        }\r\n        \r\n    }\r\n\r\n    const modal = () =>{\r\n        return (\r\n            <div className=\"modal-mask\">\r\n                <div className=\"modal-wrapper\">\r\n                    <div className={`modal-container color-${clickedElement.group_id}`}>\r\n                        <div className=\"modal-header\">\r\n                            <button \r\n                                className={`modal-default-button color-modal-${clickedElement.group_id}`} onClick={() => setShow(false, null)}>\r\n                                    x\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <div className=\"info\">\r\n                                <div className=\"head\">\r\n                                    <h3 className=\"name\">{clickedElement.name_ing}</h3>\r\n                                    <h3 className=\"group_name\">{clickedElement.group_name}</h3>\r\n                                </div>\r\n                                <h1 className=\"name_small\">{clickedElement.name_small}</h1>\r\n                                <div className=\"detail\">\r\n                                <h5 className=\"molar\">{clickedElement.molar}<em> g / mol</em></h5>\r\n                                <h5 className={`number color-modal-${clickedElement.group_id}`}>{clickedElement.el_order}</h5>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"periodic-table-component\">\r\n            <div className=\"periodic-table\">\r\n                {elementButton(0, 2)}\r\n\r\n            </div>\r\n\r\n            <div className=\"periodic-table\">\r\n                <div>\r\n                    {elementButton(2, 4)}\r\n                </div>\r\n                <div>\r\n                    {elementButton(4, 10)}\r\n                </div>\r\n            </div>\r\n            <div className=\"periodic-table\">\r\n                <div>\r\n                    {elementButton(10, 12)}\r\n                </div>\r\n                <ElementInfo element={hoveredElement} />\r\n                <div>\r\n                    {elementButton(12, 18)}\r\n                </div>\r\n            </div>\r\n            <div className=\"periodic-table\">\r\n                {elementButton(18, 90)}\r\n            </div>\r\n            <div className=\"periodic-table footer\">\r\n                {elementButton(90, 120)}\r\n            </div>\r\n            <RightBar\r\n                overGroupName={handleMouseOverRightBar}\r\n                leaveGroupName={handleMouseLeftRightBar}\r\n                clickGroupName={handleClickedRightBar}\r\n            />\r\n            {\r\n                isVisible && modal()\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PeriodicTable;","import React, { useContext, useEffect } from 'react';\nimport { Store } from './store';\nimport { css } from '@emotion/core';\nimport PeriodicTable from './components/periodic_table/PeriodicTable';\nimport { PacmanLoader } from 'react-spinners';\nimport './App.scss';\n\nfunction App() {\n  const { state, dispatch } = useContext(Store);\n\n  const override = css`\n    position:absolute;\n    top: 50%;\n    left: 33%;\n  `;\n\n  useEffect(() => {\n     (async () => {\n      await fetch('https://periodic-table-10001.herokuapp.com/api/v1/elements')\n      .then(response => response.json())\n      .then(resp => {\n        if (resp.status === \"SUCCESS\") {\n          dispatch({\n            type: 'SET_ELEMENTS',\n            payload: resp.data\n          })\n          dispatch({\n            type: 'SET_LOADING',\n            payload: false\n          })\n        }\n      });\n    })()\n  }, [dispatch]);\n\n\n  return (\n    <div className=\"app\">\n      <PeriodicTable />    \n      <PacmanLoader\n        css={override}\n        sizeUnit={\"px\"}\n        size={20}\n        color={'#36d7b7'}\n        loading={state.loading}\n      />  \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { StoreProvider } from './store';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <StoreProvider>\n        <App />\n    </StoreProvider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}